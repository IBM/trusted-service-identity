initContainers:
- name: gen-vault-cert
  image: trustedseriviceidentity/ti-gen-vault-cert:v1.2
  imagePullPolicy: Always
  volumeMounts:
    - name: pod-metadata
      mountPath: /pod-metadata
      readOnly: true
    - name: ti-sa-mount
      mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      readOnly: true
    - name: tsi-secrets
      mountPath: /tsi-secrets
    - name: ti-keys
      mountPath: /keys
      readOnly: true
    - name: ti-skeys
      mountPath: /skeys
      readOnly: true
    - name: host-etc
      mountPath: /host/etc
      readOnly: true
sidecarContainers:
- name: jwt-sidecar
  image: trustedseriviceidentity/ti-jwt-sidecar:v1.2
  imagePullPolicy: Always
  volumeMounts:
    - name: jwt-shared-data
      mountPath: /usr/share/secrets
    - name: jwt-secret
      mountPath: "/secret/jwt"
      readOnly: true
    - name: pod-metadata
      mountPath: /pod-metadata
      readOnly: true
    - name: host-etc
      mountPath: /host/etc
  command: ["/bin/sh", "-c", "/usr/local/bin/execute-get-key.sh"]
volumes:
  - name: jwt-shared-data
    emptyDir: {}
  - name: ti-host-volume
    hostPath:
      # directory location on host
       path: /ti
       # directory must exist
       type: Directory
  - name: host-etc
    hostPath:
      # directory location on host
       path: /etc
       type: Directory
  - name: jwt-secret
    hostPath:
      # directory location on host
       path: /ti/secrets/jwt
       type: Directory
  - name: pod-metadata
    downwardAPI:
      items:
        - path: "ti-secret"
          fieldRef:
            fieldPath: metadata.annotations['admission.trusted.identity/ti-secret-key']
        - path: "ti-identity"
          fieldRef:
            fieldPath: metadata.annotations['admission.trusted.identity/ti-identity']
        - path: "ti-pod-name"
          fieldRef:
            fieldPath: metadata.name
        - path: "ti-pod-namespace"
          fieldRef:
            fieldPath: metadata.namespace
        - path: "ti-images"
          fieldRef:
            fieldPath: metadata.annotations['admission.trusted.identity/ti-images']
        - path: "ti-cluster-name"
          fieldRef:
            fieldPath: metadata.annotations['admission.trusted.identity/ti-cluster-name']
        - path: "ti-cluster-region"
          fieldRef:
            fieldPath: metadata.annotations['admission.trusted.identity/ti-cluster-region']
  - name: ti-vault-secret
    emptyDir: {}
  - name: ti-keys
    hostPath:
      # directory location on host
       path: /ti/secrets/keys
       type: Directory
  - name: ti-skeys
    secret:
      secretName: ti-keys-config
  - name: ti-sa-mount
    secret:
      secretName: ti-sa-token-7ptlx
addVolumeMounts:
  - name: tsi-secrets
    mountPath: /tsi-secrets
    readOnly: true
