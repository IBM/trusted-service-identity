---
# Default values for spire.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


namespace: tornjak
selfSignedCA: true
# openShift requires special configuration, including different security level
openShift: false

# SPIRE specific values
# clustername needs to match between spire-config, k8s-workload-registrar config, and the actual cluster name
clustername: spire-example
# trustdomain is arbitrary but needs to match between Server and Agent
trustdomain: spiretest.com
spireVersion: 0.12.1
tornjakImg: tsidentity/tornjak-spire-server
spireServerSocket: /run/spire/sockets/registration.sock

# Enable OIDC
OIDC:
  # to enable support for OIDC, change the value to true
  enable: false
  serviceName: oidc-tornjak
  # replace the MY_DISCOVERY_DOMAIN with the Ingress information
  # e.g. this could be an output of IBM Cloud command:
  #  ibmcloud oc cluster get --cluster "$MY_CLUSTER" --output json | jq -r '.ingressHostname'
  #  MY_DISCOVERY_DOMAIN: MY_DISCOVERY_DOMAIN

# k8s_psat - enables support for a single SPIRE server managing
# agents deployed in multiple, different clusters.
# Prior to this deployment, create a secret that contains KUBECONFIG information
# for every remoteCluster.
#    `kubectl config view --flatten > /tmp/kubeconfigs/<cluster_name1>`
#    `kubectl config view --flatten > /tmp/kubeconfigs/<cluster_name2>`
# Then create a secret:
#     `kubectl -n tornjak create secret generic kubeconfigs --from-file=/tmp/kubeconfigs`
#
#  default namespace value = "spire"
#  default serviceAccount value = spire-agent
k8s_psat:
  remoteClusters:
  # - name: cluster1
  #   namespace: spire
  #   serviceAccount: spire-agent
  # - name: cluster2
  # - name: cluster3
  #   namespace: spire
  #   serviceAccount: spire-agent

# awd_iid - enables node attestion in AWS EKS.
# provide "access_key_id" and "secret_access_key"
# see complete documentation: https://github.com/spiffe/spire/blob/main/doc/plugin_server_nodeattestor_aws_iid.md
# aws_iid:
#   access_key_id: "ACCESS_KEY_ID"
#   secret_access_key: "SECRET_ACCESS_KEY"
#   skip_block_device: true
