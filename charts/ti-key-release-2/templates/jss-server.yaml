apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: {{- include "namespace" . | indent 4}}
  name: {{ .Values.jssService.type }}
spec:
  selector:
    matchLabels:
      name: {{ .Values.jssService.type }}
  template:
    metadata:
      labels:
        name: {{ .Values.jssService.type }}
    spec:
      serviceAccountName: tsi-setup-admin-sa
      containers:

{{- if eq .Values.jssService.type "vtpm2-server" }}
        - name: {{ .Values.jssService.type }}
          image: {{ .Values.tiRepo }}/{{ .Values.jssService.type }}:{{ .Chart.AppVersion  }}
          imagePullPolicy: Always
          securityContext:
            # privilaged is needed to create /host/sockets/app.sock
            privileged: true
          env:
            - name: ISS
              value: "{{ index .Values "ti-key-release-1" "jwt" "issuer" }}"
            - name: TTL_SEC
              value: "{{ index .Values "ti-key-release-1" "jwt" "expireSec" }}"
     {{- if .Values.jssService.tpm }}
        {{- if eq .Values.jssService.tpm.interface_type "dev" }}
            - name: TPM_INTERFACE_TYPE
              value: "{{ .Values.jssService.tpm.interface_type }}"
            - name: TPM_DEVICE
              value: "{{ .Values.jssService.tpm.device }}"
        {{- end }}
        {{- if .Values.jssService.tpm.owner_password }}
            - name: TPM_OWNER_PASSWORD
              value: "{{ .Values.jssService.tpm.owner_password }}"
            - name: TPM_OWNER_PASSWORD_FORMAT
              value: "{{ .Values.jssService.tpm.owner_password_format }}"
        {{- end }}
    {{- end }}
          ports:
          - name: http
            containerPort: 5000
            protocol: TCP
            hostPort: 5000
          volumeMounts:
    {{- if .Values.jssService.tpm }}
        {{- if eq .Values.jssService.tpm.interface_type "dev" }}
          - mountPath: "{{ .Values.jssService.tpm.device }}"
            name: tpm-device
        {{- end }}
    {{- end }}
          - mountPath: /host/sockets
            name: tsi-sockets
          - mountPath: /host/tsi-secure
            name: tsi-secure
            readOnly: true
{{- end }}

{{- if eq .Values.jssService.type "jss-server" }}
        - name: {{ .Values.jssService.type }}-pub
          image: {{ .Values.tiRepo }}/{{ .Values.jssService.type }}-pub:{{ .Chart.AppVersion  }}
          imagePullPolicy: Always
          env:
            - name: ISS
              value: "{{ index .Values "ti-key-release-1" "jwt" "issuer" }}"
            - name: TTL_SEC
              value: "{{ index .Values "ti-key-release-1" "jwt" "expireSec" }}"
          ports:
          - name: http
            containerPort: 5000
            protocol: TCP
            hostPort: 5000
          volumeMounts:
          - mountPath: /host/tsi-secure
            name: tsi-secure

        - name: {{ .Values.jssService.type }}-priv
          image: {{ .Values.tiRepo }}/{{ .Values.jssService.type }}-priv:{{ .Chart.AppVersion  }}
          imagePullPolicy: Always
          env:
            - name: ISS
              value: "{{ index .Values "ti-key-release-1" "jwt" "issuer" }}"
            - name: TTL_SEC
              value: "{{ index .Values "ti-key-release-1" "jwt" "expireSec" }}"
          volumeMounts:
          - mountPath: /host/tsi-secure
            name: tsi-secure
            readOnly: true
          - mountPath: /host/sockets
            name: tsi-sockets
{{- end }}

      volumes:
      - name: tsi-sockets
        hostPath:
          # directory location on host
           path: /var/tsi-secure/sockets
           # directory might be created
           type: DirectoryOrCreate
      - name: tsi-secure
        hostPath:
          # directory location on host
           path: /var/tsi-secure
           # directory must exist
           type: Directory
{{- if eq .Values.jssService.type "vtpm2-server" }}
  {{- if .Values.jssService.tpm }}
    {{- if eq .Values.jssService.tpm.interface_type "dev" }}
      - name: tpm-device
        hostPath:
          # directory location on host
           path: "{{ .Values.jssService.tpm.device }}"
           # directory must exist
           type: Directory
    {{- end }}
  {{- end }}
{{- end }}
