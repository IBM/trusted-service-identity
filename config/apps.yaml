apiVersion: apps/v1
kind: Deployment
metadata:
  name: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apps
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        identity_template: "true"
        app: apps
    spec:
      containers:
        - image: tsidentity/tornjak-example-nodejs:v0.1
          imagePullPolicy: Always
          name: node
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
          - name: db-config
            mountPath: /run/db/config.json
            readOnly: true
        - image: tsidentity/tornjak-example-python:v0.1
          imagePullPolicy: Always
          name: py
          ports:
            - containerPort: 5000
          resources: {}
        - name: sidecar
          securityContext:
            # privilaged is needed to create socket and bundle files
            privileged: true
          image: tsidentity/tornjak-example-sidecar:v0.1
          imagePullPolicy: Always
          command: ["sleep"]
          args: ["1000000000"]
          volumeMounts:
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
            - name: db-config
              mountPath: /run/db
      restartPolicy: Always
      volumes:
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/sockets
            type: Directory
        - name: db-config
          emptyDir: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: apps
spec:
  type: NodePort
  selector:
    app: apps
  ports:
    - name: "8001"
      port: 8001
      targetPort: 8080
    - name: "8000"
      port: 8000
      targetPort: 5000
status:
  loadBalancer: {}
